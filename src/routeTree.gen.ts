/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AppAppImport } from './routes/app/_app'
import { Route as AppAppIndexImport } from './routes/app/_app.index'
import { Route as AppAppSettingsImport } from './routes/app/_app.settings'
import { Route as AppAppReadingsImport } from './routes/app/_app.readings'
import { Route as AppAppPurchasesImport } from './routes/app/_app.purchases'
import { Route as AppAppNeighboursImport } from './routes/app/_app.neighbours'
import { Route as AppAppAnnouncementsImport } from './routes/app/_app.announcements'

// Create Virtual Routes

const AppImport = createFileRoute('/app')()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppAppRoute = AppAppImport.update({
  id: '/_app',
  getParentRoute: () => AppRoute,
} as any)

const AppAppIndexRoute = AppAppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppAppRoute,
} as any)

const AppAppSettingsRoute = AppAppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppAppRoute,
} as any)

const AppAppReadingsRoute = AppAppReadingsImport.update({
  id: '/readings',
  path: '/readings',
  getParentRoute: () => AppAppRoute,
} as any)

const AppAppPurchasesRoute = AppAppPurchasesImport.update({
  id: '/purchases',
  path: '/purchases',
  getParentRoute: () => AppAppRoute,
} as any)

const AppAppNeighboursRoute = AppAppNeighboursImport.update({
  id: '/neighbours',
  path: '/neighbours',
  getParentRoute: () => AppAppRoute,
} as any)

const AppAppAnnouncementsRoute = AppAppAnnouncementsImport.update({
  id: '/announcements',
  path: '/announcements',
  getParentRoute: () => AppAppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_app': {
      id: '/app/_app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppAppImport
      parentRoute: typeof AppRoute
    }
    '/app/_app/announcements': {
      id: '/app/_app/announcements'
      path: '/announcements'
      fullPath: '/app/announcements'
      preLoaderRoute: typeof AppAppAnnouncementsImport
      parentRoute: typeof AppAppImport
    }
    '/app/_app/neighbours': {
      id: '/app/_app/neighbours'
      path: '/neighbours'
      fullPath: '/app/neighbours'
      preLoaderRoute: typeof AppAppNeighboursImport
      parentRoute: typeof AppAppImport
    }
    '/app/_app/purchases': {
      id: '/app/_app/purchases'
      path: '/purchases'
      fullPath: '/app/purchases'
      preLoaderRoute: typeof AppAppPurchasesImport
      parentRoute: typeof AppAppImport
    }
    '/app/_app/readings': {
      id: '/app/_app/readings'
      path: '/readings'
      fullPath: '/app/readings'
      preLoaderRoute: typeof AppAppReadingsImport
      parentRoute: typeof AppAppImport
    }
    '/app/_app/settings': {
      id: '/app/_app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppAppSettingsImport
      parentRoute: typeof AppAppImport
    }
    '/app/_app/': {
      id: '/app/_app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppAppIndexImport
      parentRoute: typeof AppAppImport
    }
  }
}

// Create and export the route tree

interface AppAppRouteChildren {
  AppAppAnnouncementsRoute: typeof AppAppAnnouncementsRoute
  AppAppNeighboursRoute: typeof AppAppNeighboursRoute
  AppAppPurchasesRoute: typeof AppAppPurchasesRoute
  AppAppReadingsRoute: typeof AppAppReadingsRoute
  AppAppSettingsRoute: typeof AppAppSettingsRoute
  AppAppIndexRoute: typeof AppAppIndexRoute
}

const AppAppRouteChildren: AppAppRouteChildren = {
  AppAppAnnouncementsRoute: AppAppAnnouncementsRoute,
  AppAppNeighboursRoute: AppAppNeighboursRoute,
  AppAppPurchasesRoute: AppAppPurchasesRoute,
  AppAppReadingsRoute: AppAppReadingsRoute,
  AppAppSettingsRoute: AppAppSettingsRoute,
  AppAppIndexRoute: AppAppIndexRoute,
}

const AppAppRouteWithChildren =
  AppAppRoute._addFileChildren(AppAppRouteChildren)

interface AppRouteChildren {
  AppAppRoute: typeof AppAppRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppAppRoute: AppAppRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/app': typeof AppAppRouteWithChildren
  '/app/announcements': typeof AppAppAnnouncementsRoute
  '/app/neighbours': typeof AppAppNeighboursRoute
  '/app/purchases': typeof AppAppPurchasesRoute
  '/app/readings': typeof AppAppReadingsRoute
  '/app/settings': typeof AppAppSettingsRoute
  '/app/': typeof AppAppIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/app': typeof AppAppIndexRoute
  '/app/announcements': typeof AppAppAnnouncementsRoute
  '/app/neighbours': typeof AppAppNeighboursRoute
  '/app/purchases': typeof AppAppPurchasesRoute
  '/app/readings': typeof AppAppReadingsRoute
  '/app/settings': typeof AppAppSettingsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/app': typeof AppRouteWithChildren
  '/app/_app': typeof AppAppRouteWithChildren
  '/app/_app/announcements': typeof AppAppAnnouncementsRoute
  '/app/_app/neighbours': typeof AppAppNeighboursRoute
  '/app/_app/purchases': typeof AppAppPurchasesRoute
  '/app/_app/readings': typeof AppAppReadingsRoute
  '/app/_app/settings': typeof AppAppSettingsRoute
  '/app/_app/': typeof AppAppIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/app'
    | '/app/announcements'
    | '/app/neighbours'
    | '/app/purchases'
    | '/app/readings'
    | '/app/settings'
    | '/app/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/app'
    | '/app/announcements'
    | '/app/neighbours'
    | '/app/purchases'
    | '/app/readings'
    | '/app/settings'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/app'
    | '/app/_app'
    | '/app/_app/announcements'
    | '/app/_app/neighbours'
    | '/app/_app/purchases'
    | '/app/_app/readings'
    | '/app/_app/settings'
    | '/app/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/app": {
      "filePath": "app",
      "children": [
        "/app/_app"
      ]
    },
    "/app/_app": {
      "filePath": "app/_app.tsx",
      "parent": "/app",
      "children": [
        "/app/_app/announcements",
        "/app/_app/neighbours",
        "/app/_app/purchases",
        "/app/_app/readings",
        "/app/_app/settings",
        "/app/_app/"
      ]
    },
    "/app/_app/announcements": {
      "filePath": "app/_app.announcements.tsx",
      "parent": "/app/_app"
    },
    "/app/_app/neighbours": {
      "filePath": "app/_app.neighbours.tsx",
      "parent": "/app/_app"
    },
    "/app/_app/purchases": {
      "filePath": "app/_app.purchases.tsx",
      "parent": "/app/_app"
    },
    "/app/_app/readings": {
      "filePath": "app/_app.readings.tsx",
      "parent": "/app/_app"
    },
    "/app/_app/settings": {
      "filePath": "app/_app.settings.tsx",
      "parent": "/app/_app"
    },
    "/app/_app/": {
      "filePath": "app/_app.index.tsx",
      "parent": "/app/_app"
    }
  }
}
ROUTE_MANIFEST_END */
